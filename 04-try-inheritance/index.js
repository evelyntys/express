const express = require('express');
//const variables cannot be reassigned to
const hbs = require('hbs');
const waxOn = require('wax-on'); //wax-on provides template inheritance

//setup app
const app = express();

//setup express to use hbs
app.set('view engine', 'hbs')
//need hbs to use wax-on

//setup express to define where to find static files(not generated by js/programming; dynamic is);
app.use(express.static('public'));

//set up wax-on;
waxOn.on(hbs.handlebars);
//tell wax-on where to find the base layouts(layouts-template)
waxOn.setLayoutPath('./views/layouts');

//register our custom helpers
//ifEquals
//the callback function has three arguments:
//arg1, arg2 are data from the hbs
hbs.handlebars.registerHelper('ifEquals', function(arg1, arg2, options){
    return (arg1 == arg2) ? options.fn(this) : options.inverse(this);
})

//routes are defined before starting server
//req should always be before res
app.get('/', function(req, res){
    //if no res; then the browser will keep loading since it is waiting for a response
    //do not reture/console.log from route function unless you want to end the function
    //route function must eventually have a res.send
    res.render('index')
})

app.get('/about-us/', function(req,res){
    let name = req.params.name;
    res.render('about-us')
})

app.get('/contact-us/', function(req,res){
    res.render('contact-us')
})

let dishes = [{
    'name': 'chicken rice',
    'calories': 500,
},
{'name' : 'porridge',
'calories': 200}]

app.get('/fruits/', function(req,res){
    res.render('fruits', {
        'fruits':['apples', 'oranges', 'pears', 'mangosteens'],
        'dishes' : dishes,
        'favouriteDrink' : "milo peng"
    })

})

//start server at port 3000
app.listen(3000, function (){
    console.log('server started');
})